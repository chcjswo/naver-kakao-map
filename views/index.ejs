<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport"
          content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
    <title>간단한 지도 표시하기</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <script type="text/javascript"
            src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=zldh072q8z"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=f125e167059797713815ef449abc8db2&libraries=services"></script>
</head>
<body>
<div id="navbar">myfirstmap</div>
<div id="infoBox">
    <div id="infoTitle">현재날짜</div>
    <div id="infoContent">2020.10.18</div>
</div>
<div id="search">
    <input id="search_input" placeholder="목적지를 입력해주세요." />
    <button id="search_button">검색</button>
</div>
<div id="current">현재위치</div>
<div id="map" style="width:100%;height:100vh;"></div>
<script type="text/javascript" src="/data/data.js"></script>
<script>
    var mapOptions = {
        center: new naver.maps.LatLng(37.3595704, 127.105399),
        zoom: 10
    };

    var map = new naver.maps.Map('map', mapOptions);

    // marker = new naver.maps.Marker({
    //     map: map,
    //     position: new naver.maps.LatLng(37.359704, 127.105399),
    //     icon: {
    //         content: "<div class='marker'></div>"
    //     }
    // });

    const markerList = [];
    const infoWindowList = [];

    data.forEach(function (item) {
        const latlng = new naver.maps.LatLng(item.lat, item.lng);
        marker = new naver.maps.Marker({
            map: map,
            position: latlng,
            icon: {
                content: "<div class='marker'></div>",
                anchor: new naver.maps.Point(12, 12)
            }
        });

        const content = `<div class='infoWindow_wrap'>
            <div class='infoWindow_title'>${item.title}</div>
            <div class='infoWindow_content'>${item.content}</div>
            <div class='infoWindow_date'>${item.date}</div>
        </div>`;

        const infoWindow = new naver.maps.InfoWindow({
            content: content,
            backgroundColor: "#00ff0000",
            borderColor: "#00ff0000",
            anchorSize: new naver.maps.Size(0, 0)
        });

        markerList.push(marker);
        infoWindowList.push(infoWindow)
    });

    for (let i = 0, length = markerList.length; i < length; i++) {
        naver.maps.Event.addListener(map, 'click', clickMap(i));
        naver.maps.Event.addListener(markerList[i], 'click', viewInfo(i));
    }
    
    function clickMap(index) {
        return function() {
            const infoWindow = infoWindowList[index];
            infoWindow.close();
        }
    }

    function viewInfo(index) {
        return function() {
            const marker = markerList[index];
            const infoWindow = infoWindowList[index];

            if (infoWindow.getMap()) {
                infoWindow.close();
            } else {
                infoWindow.open(map, marker);
            }
        }
    }

    let currentUse = true;

    $('#current').on('click', function() {
        if ('geolocation' in navigator) {
            navigator.geolocation.getCurrentPosition(function(position) {
                const latlng = new naver.maps.LatLng(position.coords.latitude, position.coords.longitude);
                if (currentUse) {
                    marker = new naver.maps.Marker({
                        map: map,
                        position: latlng,
                        icon: {
                            content: "<img class='pulse' draggable='false' unselectable='on' src='https://myfirstmap.s3.ap-northeast-2.amazonaws.com/circle.png' />",
                            anchor: new naver.maps.Point(11, 11)
                        }
                    });
                    currentUse = false;
                }
                map.setZoom(14, false);
                map.panTo(latlng);
            });
        } else {
            alert("위치정보 사용 불가능");
        }
    });

    const ps = new kakao.maps.services.Places();
    const search_arr = [];

    $('#search_input').on('keydown', function(e) {
        if (e.code === 'Enter') {
            ps.keywordSearch($(this).val(), placeSearch);
        }
    });

    $('#search_button').on('click', function() {
        const content = $('#search_input').val();
        ps.keywordSearch(content, placeSearch);
    });

    function placeSearch(data, status, pagination) {
        if (status === kakao.maps.services.Status.OK) {
            const lat = data[0].y;
            const lng = data[0].x;
            const latlng = new naver.maps.LatLng(lat, lng);
            marker = new naver.maps.Marker({
                map: map,
                position: latlng
            });
            if (search_arr.length === 0) {
                search_arr.push(marker);
            } else {
                search_arr.push(marker);
                const pre_marker = search_arr.splice(0, 1);
                pre_marker[0].setMap(null);
            }
            map.setZoom(16, false);
            map.panTo(latlng);
        } else {
            alert('검색결과가 없습니다.');
        }
    }
</script>
</body>
</html>